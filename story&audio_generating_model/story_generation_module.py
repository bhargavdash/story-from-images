# -*- coding: utf-8 -*-
"""story_generation_module.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hELKcpNdXssIC0jOYybEnF2wXJJnSAlo
"""

# We use gemini 2.0 flash api to generate story from a list of captions and a genre
from google import genai
client = genai.Client(api_key="AIzaSyAh3jABypOv6effFX_wh1iEmcIsOExm7Ks")

# function to generate story which takes a list of captions and a genre as input and retuns the story
def generate_story(captions, genre):
  try:
    # call the gemini 2.0 flash api
    response = client.models.generate_content(
      model = "gemini-2.0-flash",
      contents = f"""
      I have multiple images.
      Generate a complete {genre} story of around 500 words by fictionally linking these images.
      The story should be logical and should connect all the characters.
      I will give you the description of each image as a list of captions (each caption represents an image).
      The response should contain only the story with its title.
      Dont include any other stuff in the story(such as where you have included the caption, etc.)
      Also, the first line will contain only the title of the story (no 'Title:' or '##' anything like this should precede, only the text).
      \n{captions}
      """
    )
    # store the response in story
    story = response.text.strip()
    if story:
      return story
    else:
      print("Story generation failed")
      return None
  except Exception as e:
    print(f"Error while translating: {e}")
    return None

# captions = ["a group of people on a subway train", "a man sitting on steps of a building"]
# genre = 'horror'
# story = generate_story(captions, genre)
# print(story)